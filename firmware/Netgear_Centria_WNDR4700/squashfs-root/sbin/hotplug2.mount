#! /bin/sh

DISK_FIND_TABLE=/tmp/find_disk_abcxzy

# $---> sda1
print_log()
{
        if [ `length $1` != '4' ];then
                return
        fi

	sata_disk_name=`/bin/config sata_diskname`

        device_name=`cat $DISK_FIND_TABLE | grep $1 | awk -F* '{print $2}'`
	volume_name=`cat $DISK_FIND_TABLE | grep $1 | awk -F* '{{{i=NF-3; a="*";while(i!=0) {printf $(NF-i); if(i!=1) printf a; i--}}}}'`

	if [ "x$sata_disk_name" = "x$1" ]; then
		logger "[Internal disk attached] The Internal disk attached $device_name($volume_name) is attached to the router"
                return
	else
		logger "[USB device attached] The USB storage device $device_name($volume_name) is attached to the router"
                return
	fi

	volume_name=`/usr/sbin/vol_id -L /dev/$1`
	if [ ! -n "$volume_name" ]; then
	       volume_name=$1
	fi
	logger "[USB device attached] The USB storage device $1($volume_name) is attached to the router"
}

try_ntfs()
{
	ntfs-3g.probe --readwrite /dev/$1
	case "$?" in
	0)
		ntfs-3g /dev/$1 /mnt/$1 -o locale=en_US.UTF-8
		if [ $? -ne 0 ];then
			rmdir /mnt/$1
		fi
		;;
	14)
		ntfs-3g /dev/$1 /mnt/$1 -o remove_hiberfile,locale=en_US.UTF-8
                if [ $? -ne 0 ];then
                        rmdir /mnt/$1
                fi
                ;;

	15)
		ntfs-3g /dev/$1 /mnt/$1 -o force,locale=en_US.UTF-8
		if [ $? -ne 0 ];then
			rmdir /mnt/$1
		fi
		;;
	*)
		rmdir /mnt/$1
	esac
}

try_paragon_ntfs()
{
	mount -t ufsd -o nls=utf8,rw,nodev,noexec,noatime,uid=0,gid=0,fmask=0,dmask=0 --force /dev/$1 /mnt/$1
}

if [ $# -eq 0 ];then
	echo "Must run with devicename."
	exit 1
fi
mkdir /mnt/$1

fs_type=$(vol_id /dev/$1 | grep ID_FS_TYPE | awk -F= '{print $2}')
if [ "x$fs_type" = "x" ]; then
	fs_type=$(parted -s /dev/$1 print | sed -n '/Number/{n;p}' | awk '{print $5}')
fi
echo This partition type is $fs_type !
partition_tb=$(parted -s /dev/`echo $1 | sed 's/[0-9]//g'` print | grep "Partition Table" | awk '{print $3}')
if [ "x$(parted -s /dev/`echo $1 | sed 's/[0-9]//g'` print noshare | grep $1)" = "x" -o "x$partition_tb" = "xloop" ]; then
	mount -o utf8=yes,fmask=0000,dmask=0000 /dev/$1 /mnt/$1
	if [ $? -ne 0 ];then
	# UTF8 can't be added to mounting ext2/3
		if [ "$fs_type" = "ntfs" ]; then
			try_paragon_ntfs $1
		elif [ "$fs_type" = "ext4" ]; then
			# For AMCC's suggestion, we'll add some options for EXT4 file system
			mount -o nodev,noexec,noatime,barrier=0,data=writeback /dev/$1 /mnt/$1
		else
			mount -o nodev,noexec,noatime /dev/$1 /mnt/$1
		fi
	fi
fi

diskname=$(echo $1 | sed 's/[0-9].*//')
lastpartition=$(cat /proc/partitions | grep $diskname | awk '{print $4}' | tail -1)
echo "disk name is $diskname last partition is $lastpartition"

if [ $1 = $lastpartition ]; then
	echo noop > /sys/block/$diskname/queue/scheduler
	echo 1024 > /sys/block/$diskname/queue/nr_requests

	update_smb $diskname
	/usr/sbin/update_afp $diskname
	#/usr/sbin/usb_cfg approve $1
	/sbin/cmdftp restart
	/sbin/cmddlna restart &
fi

print_log $1
rm /tmp/umount_result

