#!/bin/sh /etc/rc.common
START=20

true_lanif=$($CONFIG get true_lanif)

print_dhcpd_conf(){
    cat <<EOF
pidfile /var/run/udhcpd.pid
start $2
end $3
interface $1
remaining yes
auto_time 5
lease_file /tmp/udhcpd.leases
option subnet $4
option router $5
option dns $5
option lease $6
EOF
}
 
start_dhcpd() {
    [ ! -f /tmp/udhcpd.leases ] && touch /tmp/udhcpd.leases
    print_dhcpd_conf "$BR_IF" "$($CONFIG get dhcp_start)" "$($CONFIG get dhcp_end)" "$($CONFIG get lan_netmask)" "$($CONFIG get lan_ipaddr)" "$($CONFIG get lan_lease)" > /tmp/udhcpd.conf

    count=1
    while :
    do
	lease="$($CONFIG get reservation$count)"
	if [ "x$lease" = "x" ]; then
	    break;
	fi
	count=`expr $count + 1`
	echo "static_lease $lease" >> /tmp/udhcpd.conf
    done

    udhcpd /tmp/udhcpd.conf
}

start() {
	local lan_ip lan_mask

	lan_ip=$($CONFIG get lan_ipaddr)
	lan_mask=$($CONFIG get lan_netmask)

	brctl addif $BR_IF $true_lanif
	ifconfig $true_lanif 0.0.0.0
	ifconfig $true_lanif up

	lan_default_mac=$(ifconfig $LAN_IF | grep $LAN_IF | sed 's/.*HWaddr//')
	lan_default_mac=$(echo -n $lan_default_mac)
	ifconfig $BR_IF hw ether $lan_default_mac
	echo "NET-LAN: Default LAN MAC is : $lan_default_mac"

	sleep 5
	ifconfig $BR_IF ${lan_ip:-192.168.1.1} netmask ${lan_mask:-255.255.255.0}
	ifconfig $BR_IF up
	ifconfig $BR_IF down
	ifconfig $BR_IF up

	sleep 2
	# For IPv6 Ready Log test, fixed ip setting do not enable radvd and dhcpv6s
	local wan6_type=`$CONFIG get ipv6_type`
	local logo_test=`$CONFIG get endis_ipv6_logo_test`
	if [ "x$logo_test" = "x1" -a "x$wan6_type" = "xfixed" ]; then
		/etc/net6conf/6fixed lan
	fi

	if [ "$($CONFIG get lan_dhcp)" = "1" -a "$($CONFIG get ap_mode)" = "0" ]; then
		if [ "$($CONFIG get wds_endis_fun)" = "0" -a "$($CONFIG get wla_wds_endis_fun)" = "0" ]; then
			start_dhcpd
		elif [ "$($CONFIG get wds_endis_fun)" = "0" -a "$($CONFIG get wla_wds_endis_fun)" = "1" -a "$($CONFIG get wds_repeater_basic_a)" = "1" ]; then
			start_dhcpd
		elif [ "$($CONFIG get wds_endis_fun)" = "1" -a "$($CONFIG get wla_wds_endis_fun)" = "0" -a "$($CONFIG get wds_repeater_basic)" = "1" ]; then
			start_dhcpd
		elif [ "$($CONFIG get wds_endis_fun)" = "1" -a "$($CONFIG get wla_wds_endis_fun)" = "1" ]; then
			if [ "$($CONFIG get wds_repeater_basic_a)" = "1" -a "$($CONFIG get wds_repeater_basic)" = "1" ]; then
				start_dhcpd
			fi
		fi
	fi

	# Attach Device
	mkdir -p /tmp/netscan
	/usr/sbin/net-scan

	# Restart UPnP
	if [ -f "/tmp/bootdone" ]; then
		/sbin/cmdupnp restart
	fi

	#Restart DLNA
	/sbin/cmddlna ip_restart

	# When changing LAN IP from Auot-IP mode to fixed mode
	if [ "$($CONFIG get dnsmasq_restart)" = "1" ]; then
		/sbin/cmdautoip.sh stop
		/etc/init.d/dnsmasq start
		$CONFIG set dnsmasq_restart=0
	fi

	# Start Router Debugging Mode ...
	. /lib/network/RtDebug.sh
	start_RtDebugMode

	# Tell smbd that LAN's IP MAY be changed.
	/usr/bin/killall smbd 2> /dev/null
	/usr/sbin/update_smb

	# Apply static route	
	/sbin/cmdroute start

	# restart samba if necessary
	if [ -n "`pidof smbd`" ]; then
		killall smbd
		/usr/sbin/update_smb
	fi

	# Start lld2d
	echo "$($CONFIG get netbiosname)" > /proc/sys/kernel/hostname
	/usr/sbin/lld2d $($CONFIG get lan_ifname)

	if [ ! -f "/tmp/bootdone" ]; then
               echo -n 9 > /proc/switch_phy
        fi
}

stop() {
	killall udhcpd
	killall net-scan
	killall lld2d
	ifconfig $true_lanif down

	# PHY link will be pulled low some seconds to force transition to reboot state 
	# and generating DHCP request and Discovery protocol and address refresh in the 
	# devices connected to the NETGEAR Local Area Network ports.
	echo -n 9 > /proc/switch_phy
}

restart() {
	stop
	start
}
